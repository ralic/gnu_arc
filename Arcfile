;;  This file is part of the arc package
;;  Copyright (C) 2002, 2003, 2009 by Gregor Klinke
;;
;;  This library is free software: you can redistribute it and/or modify
;;  it under the terms of the GNU Lesser General Public License as published
;;  by the Free Software Foundation, either version 3 of the License, or
;;  (at your option) any later version.
;;
;;  This library is distributed in the hope that it will be useful,
;;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;  GNU Lesser General Public License for more details.
;;
;;  You should have received a copy of the GNU General Public License
;;  along with this program.  If not, see <http://www.gnu.org/licenses/>.

;; arcfile for building, installing, and cleaning arc
(project arc
         project: "arc"
         version: "0.4.0b"
         info: "Arc application"
         basedir: "."
         default: 'all)

;; properties
(stmt prefix 
      scope: 'local
      (prop home))
(stmt bindir 
      scope: 'local 
      (prop exec-path))
(stmt infodir 
      scope: 'local  
      (path-append (prop prefix) "/share/info"))
(stmt arcdir 
      scope: 'local 
      (prop home))
(stmt arc-tasks-dir
      scope: 'local
      (path-append (prop home) "tasks"))

;;----------------------------------------------------------------------
;; configure
;;----------------------------------------------------------------------
(stmt configure
      info: "Configures the application"
      (let ((values (make-alist "arc-version" (prop version))))
        (filter src: "src/version.scm.in"
                values: values)
        (filter src: "doc/arc.texinfo.in"
                separator: #\&
                values: values)
        (filter src: "doc/arc.1.in"
                values: values)))

;;----------------------------------------------------------------------
;; documentation
;;----------------------------------------------------------------------
(stmt doc-pdf
      depends: 'configure
      (texinfo src: "doc/arc.texinfo"
               format: 'pdf))
(stmt doc-info
      depends: 'configure
      (texinfo src: "doc/arc.texinfo"
               split?: #t
               format: 'info))
(stmt doc-dvi
      depends: 'configure
      (texinfo src: "doc/arc.texinfo"
               format: 'dvi))
(stmt doc-plain
      depends: 'configure
      (texinfo src: "doc/arc.texinfo"
               format: 'plain))
(stmt doc-html
      depends: 'configure
      (texinfo src: "doc/arc.texinfo"
               split?: #t
               dest: "html"
               format: 'html))

(stmt doc
      depends: '(doc-pdf doc-dvi doc-info doc-plain)
      #t)


;;----------------------------------------------------------------------
;; main target
;;----------------------------------------------------------------------
(stmt all
      depends: 'configure
      'done)


;;----------------------------------------------------------------------
;; packaging
;;----------------------------------------------------------------------
(stmt dist
      depends: 'all
      (dist files: (fileset pattern: '("src/**/*.scm"
                                       "src/**/*.in"
                          
                                       "boot/*.scm"

                                       "scheme/**/*.c"
                                       "scheme/**/*.h"
                                       "scheme/**/*.h.in"
                                       "scheme/(build-.*.sh$)"
                                       "scheme/(build-.*.bat$)"
                                       "scheme/*.scm"
                          
                                       "doc/*.scm"
                                       "doc/*.in"
                                       "doc/fdl.texinfo"
                                       "doc/texinfo.tex"
                          
                                       "test/*.m"
                                       "test/*.c"
                                       "test/*.h"
                                       "test/*.in"
                                       "test/*.java"
                                       "test/date-time.sh"
                                       "test/Arcfile"
                          
                                       "README"
                                       "NEWS"
                                       "TODO"
                                       "INSTALL"
                                       "ChangeLog"
                                       "COPYING"
                                       "Arcfile"
                                       "arc.config.in"
                                       "AUTHORS"
                                       "configure")
                            exclude: '("src/config.scm" 
                                       "src/version.scm"
                                       "scheme/scmenv.h"
                                       "test/version.h") )))

;;----------------------------------------------------------------------
;; cleanup
;;----------------------------------------------------------------------
(stmt clean
      (clean res: (fileset pattern: '("scheme/*.o"
                                      "scheme/arc"
                                      "test/_build"
                                      "doc/*.aux"
                                      "doc/*.cp"
                                      "doc/*.cps"
                                      "doc/*.fn"
                                      "doc/*.fns"
                                      "doc/*.ky"
                                      "doc/*.log"
                                      "doc/*.pg"
                                      "doc/*.toc"
                                      "doc/*.tp"
                                      "doc/*.vr"
                                      "doc/html"
                                      "*.tar.gz"))))

(stmt distclean
      depends: 'clean
      (clean res: (fileset pattern: '("bootstrap.sh"
                                      "src/config.scm"
                                      "src/version.scm"
                                      "arc"
                                      "arc.config"
                                      "doc/arc.1"
                                      "doc/arc.texinfo"
                                      "app"
                                      "doc/*.pdf"
                                      "doc/*.dvi"
                                      "doc/(.*\\.info(-[0-9]+)?$)"))))


;;----------------------------------------------------------------------
;; building the contained chibi scheme interpreter
;;----------------------------------------------------------------------

(stmt arc-c-sources
      scope: 'local
      depends: 'configure
      (fileset files: '("scheme/sexp.c" "scheme/eval.c" "scheme/fsys.c"
                        "scheme/dirport.c"
                        "scheme/arc.c")) )

(stmt arc-c-flags
      os: 'darwin
      scope: 'local
      '("-DOSX"))

(stmt compile-arc
      info: "Compiles all c sources."
      (c-compile sources: (-> arc-c-sources)
                 includes: '("scheme/include")
                 flags: (append '("-DUSE_WARN_UNDEFS=0"
                                  ;; "-DDEBUG_VM=1"
                                  )
                                (-> arc-c-flags))
;;;                 outdir: ".arc/objs"
                 debug?: #f
                 shared?: #f
                 static?: #t
                 warn-level: 'high
                 opt-level: 'high))

(stmt link-arc
      os: 'linux
      frameworks
      (link outdir: "scheme"
            files: (-> compile-arc)
            shared?: #f
            appnm: "arc"))

(stmt link-arc
      os: 'darwin
      (link outdir: "scheme"
            files: (-> compile-arc)
            shared?: #f
            appnm: "arc"
            frameworks: '("Carbon") ))

(stmt arc
      info: "Compile and build the main executable"
      (copy file: (-> link-arc)
            force?: #t
            tofile: "app/arc"))

;; --------------------------------------------------------------------
;; installing arc
;; --------------------------------------------------------------------

(stmt install-exe
      os: 'cygwin
      (install src: "app/arc.exe"
               dest: (-> bindir)))
(stmt install-exe
      os: 'ms-dos
      (install src: "app/arc.exe"
               dest: (-> bindir)))
(stmt install-exe
      os: 'win32
      (install src: "app/arc.exe"
               dest: (-> bindir)))
(stmt install-exe
      (install src: "app/arc"
               dest: (-> bindir)))
      
(stmt install
      info: "Installs arc to the place specified with ./configure"
      depends: '(all install-exe)
      
      (install src: (fileset pattern: "src/*.scm")
               dest: (-> arcdir))

      (install src: (fileset pattern: "app/*.scm")
               dest: (-> arcdir))

      (install src: (fileset pattern: "src/tasks/*.scm")
               dest: (-> arc-tasks-dir))
      (install src: (fileset pattern: "src/tasks/generic/*.scm")
               dest: (path-append (-> arc-tasks-dir) "generic"))
      (install src: (fileset pattern: "src/tasks/linux/*.scm")
               dest: (path-append (-> arc-tasks-dir) "linux"))
      (install src: (fileset pattern: "src/tasks/beos/*.scm")
               dest: (path-append (-> arc-tasks-dir) "beos"))
      (install src: (fileset pattern: "src/tasks/darwin/*.scm")
               dest: (path-append (-> arc-tasks-dir) "darwin"))

      (install src: (fileset pattern: '("doc/(.*\\.info(-[0-9]+)?$)"))
               dest: (-> infodir)))

;;Keep this comment at the end of the file 
;;Local variables:
;;mode: scheme
;;End:

